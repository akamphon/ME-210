=>PYTHONTEX#py#default#default#0#code#####63#
from math import *
import random
=>PYTHONTEX#py#default#default#1#code#####860#
L = random.randint(2,6) # in m
W = L - random.randint(0,L-1) # in m
stress = random.randint(1,10)*1e6 # in Pa
E = random.randint(5,15)*1e10 # in Pa
poisson = random.randint(25,35)/100
=>PYTHONTEX#py#default#default#2#i#####868#
L
=>PYTHONTEX#py#default#default#3#i#####868#
W
=>PYTHONTEX#py#default#default#4#i#####868#
stress/1e6
=>PYTHONTEX#py#default#default#5#i#####868#
E/1e9
=>PYTHONTEX#py#default#default#6#i#####868#
poisson
=>PYTHONTEX#py#default#default#7#code#####870#
sigma_allow = random.randint(10,35)*10*1e6 # in Pa
tau_allow = random.randint(5,20)*10*1e6 # in Pa
h = random.randint(4,8)*1e-2 # in m
b = random.randint(2,5)*1e-2 # in m
w = h - 2e-2 # in m
t = random.randint(10,20)/10*1e-2 # 1.0 - 2.0 mm
=>PYTHONTEX#py#default#default#8#i#####879#
sigma_allow/1e6
=>PYTHONTEX#py#default#default#9#i#####879#
tau_allow/1e6
=>PYTHONTEX#py#default#default#10#i#####879#
round(w*1e2,1)
=>PYTHONTEX#py#default#default#11#i#####879#
round(b*1e2,1)
=>PYTHONTEX#py#default#default#12#i#####879#
round(h*1e2,1)
=>PYTHONTEX#py#default#default#13#i#####879#
round(t*1e2,1)
=>PYTHONTEX#py#default#default#14#code#####1716#
E_st = random.randint(15,25)*10*1e9 # 150 - 250 GPa
E_al = random.randint(10,20)*5*1e9 # 50 - 100 GPa
E_cu = random.randint(3,8)*10*1e9 # 30 - 80 GPa

L_st = random.randint(20,30)/10 # 2 - 3 m
L_al = random.randint(15,40)/10 # 1.5 - 4 m
L_cu = random.randint(10,30)/10 # 1 - 3 m

A_st = random.randint(2,5)*1e-4 # 2 - 5 cm2
A_al = random.randint(4,8)*1e-4 # 4 - 8 cm2
A_cu = random.randint(6,10)*1e-4 # 6 - 10 cm2

sigma_st = random.randint(20,45)*10*1e6 # 200 - 450 MPa
sigma_al = random.randint(10,25)*10*1e6 # 100 - 250 MPa
sigma_cu = random.randint(6,15)*10*1e6 # 60 - 150 MPa
=>PYTHONTEX#py#default#default#15#i#####1742#
E_st/1e9
=>PYTHONTEX#py#default#default#16#i#####1742#
sigma_st/1e6
=>PYTHONTEX#py#default#default#17#i#####1742#
L_st
=>PYTHONTEX#py#default#default#18#i#####1742#
A_st/1e-4
=>PYTHONTEX#py#default#default#19#i#####1743#
E_al/1e9
=>PYTHONTEX#py#default#default#20#i#####1743#
sigma_al/1e6
=>PYTHONTEX#py#default#default#21#i#####1743#
L_al
=>PYTHONTEX#py#default#default#22#i#####1743#
A_al/1e-4
=>PYTHONTEX#py#default#default#23#i#####1744#
E_cu/1e9
=>PYTHONTEX#py#default#default#24#i#####1744#
sigma_cu/1e6
=>PYTHONTEX#py#default#default#25#i#####1744#
L_cu
=>PYTHONTEX#py#default#default#26#i#####1744#
A_cu/1e-4
=>PYTHONTEX#py#default#default#27#code#####2289#
L1 = random.randint(3,10)/10 # 0.3 - 1.0 m
L2 = random.randint(5,15)/10 # 0.5 - 1.5 m
x = L1 + L2/random.randint(2,4)
d1 = random.randint(20,40)/10*1e-2 # 2.0 - 4.0 cm
d2 = d1 + random.randint(5,15)/10*1e-2
G = random.randint(5,10)*10*1e9 # 50 - 100 GPa
tau_allow = random.randint(6,12)*10*1e6 # 60 - 120 MPa
phi_allow = random.randint(1,5)/10 # 0.1 - 0.5 rad
=>PYTHONTEX#py#default#default#28#i#####2300#
round(x,3)
=>PYTHONTEX#py#default#default#29#i#####2300#
L1
=>PYTHONTEX#py#default#default#30#i#####2300#
round(d1/1e-2,1)
=>PYTHONTEX#py#default#default#31#i#####2300#
L2
=>PYTHONTEX#py#default#default#32#i#####2300#
round(d2/1e-2,1)
=>PYTHONTEX#py#default#default#33#i#####2300#
G/1e9
=>PYTHONTEX#py#default#default#34#i#####2300#
tau_allow/1e6
=>PYTHONTEX#py#default#default#35#i#####2300#
phi_allow
=>PYTHONTEX#py#default#default#36#code#####3379#
  frac = random.randint(1,4)/5 # 0.2 - 0.8
  L = random.randint(1,3) # 1 - 3 m
  x = round(frac*L,2)
  E_cfrp = random.randint(10,18)*10*1e9 # 100 - 180 GPa
  E_steel = random.randint(15,25)*10*1e9 # 150 - 250 GPa
  sigma_cfrp = random.randint(10,20)*10*1e6 # 200 - 400 MPa
  sigma_steel = random.randint(30,45)*10*1e6 # 300 - 450 MPa
  tau_glue = random.randint(4,8)*10*1e6 # 40 - 80 MPa
  b = random.randint(3,6)*1e-2 # 3 - 6 cm
  h_cfrp =  random.randint(12,25)/10*1e-2 # 1.2 - 2.5 cm
  h_steel =  random.randint(8,15)/10*1e-2 # 0.8 - 1.5 cm
=>PYTHONTEX#py#default#default#37#i#####3393#
L
=>PYTHONTEX#py#default#default#38#i#####3393#
x
=>PYTHONTEX#py#default#default#39#i#####3393#
round(E_cfrp/1e9)
=>PYTHONTEX#py#default#default#40#i#####3393#
round(sigma_cfrp/1e6)
=>PYTHONTEX#py#default#default#41#i#####3393#
round(E_steel/1e9)
=>PYTHONTEX#py#default#default#42#i#####3393#
round(sigma_steel/1e6)
=>PYTHONTEX#py#default#default#43#i#####3393#
round(h_cfrp/1e-2,1)
=>PYTHONTEX#py#default#default#44#i#####3393#
round(h_steel/1e-2,1)
=>PYTHONTEX#py#default#default#45#i#####3393#
round(tau_glue/1e6)
=>PYTHONTEX#py#default#default#46#i#####3393#
round(b/1e-2)
=>PYTHONTEX#py#default#default#47#i#####3401#
round(h_steel/1e-2,1)
=>PYTHONTEX#py#default#default#48#i#####3403#
round(h_cfrp/1e-2,1)
=>PYTHONTEX#py#default#default#49#i#####3404#
round(b/1e-2)
=>PYTHONTEX#py#default#default#50#code#####3408#
              print(r'\draw [<-, ultra thick] (top.north west) ++ (0:'+str(7*frac)+r') --++ (90:1) node[above]{$P$};')
              print(r'\draw [|<->|] (top.north west) ++ (90:0.3) --++ (0:'+str(7*frac)+r') node[midway,  above]{'+str(round(x,1))+r' m};')
=>PYTHONTEX#py#default#default#51#code#####3868#
  L = random.randint(5,12)/10 # 0.5 - 1.2 m
  E = random.randint(5,9)*10*1e9 # 50 - 90 GPa
  sigma_allow = random.randint(10,20)*10*1e6 # 100 - 200 MPa
  frac = random.randint(6,9)/10 # 5/8 - 7/8
  x = frac*L
  delta = random.randint(3,8)*1e-2 # 3 - 8 cm
=>PYTHONTEX#py#default#default#52#i#####3877#
L
=>PYTHONTEX#py#default#default#53#i#####3877#
E/1e9
=>PYTHONTEX#py#default#default#54#i#####3877#
sigma_allow/1e6
=>PYTHONTEX#py#default#default#55#i#####3877#
round(x,3)
=>PYTHONTEX#py#default#default#56#i#####3877#
round(delta/1e-2,2)
=>PYTHONTEX#py#default#default#57#code#####3885#
        print(r'\draw [|<->|] (wall.south east) --++ (0:'+str(frac*6)+r') node[midway, below]{'+str(round(x,3))+r' m};')
        print(r'\draw [<-,ultra thick] (beam.south west) ++ (0:'+str(frac*6)+r') --++ (-90:1) node[below]{$P$};')
=>PYTHONTEX#py#default#default#58#i#####3890#
round(delta/1e-2,2)
=>PYTHONTEX#py#default#default#59#code#####4809#
sigma_x = random.randint(-15,15)*10 # -150 - 150 MPa
sigma_y = random.randint(-15,15)*10 # -150 - 150 MPa
tau_xy = random.randint(-15,15)*10 # -150 - 150 MPa
if sigma_x == 0: sigma_x = 80
if sigma_y == 0: sigma_y = -80
if sigma_x == sigma_y: sigma_x = sigma_y + 50
if tau_xy == 0: tau_xy = 60
=>PYTHONTEX#py#default#default#60#code#####4830#
            if sigma_y > 0:
              print(r'\draw [->, thick] (element.north) --++ (90:1) node[left]{$\sigma_{y}$ = \py{sigma_y} MPa};')
              print(r'\draw [->, thick] (element.south) --++ (-90:1);')
            else:
              print(r'\draw [<-, thick] (element.north) --++ (90:1) node[left]{$\sigma_{y}$ = \py{sigma_y} MPa};')
              print(r'\draw [<-, thick] (element.south) --++ (-90:1);')
            if sigma_x > 0:
              print(r'\draw [->, thick] (element.east) --++ (0:1) node[above right]{$\sigma_{x}$ = \py{sigma_x} MPa};')
              print(r'\draw [->, thick] (element.west) --++ (180:1);')
            else:
              print(r'\draw [<-, thick] (element.east) --++ (0:1) node[above right]{$\sigma_{x}$ = \py{sigma_x} MPa};')
              print(r'\draw [<-, thick] (element.west) --++ (180:1);')
            if tau_xy > 0:
              print(r'\draw [-left to, thick] (element.north west) ++ (45:0.3) --++ (0:1.5) node[above right]{$\tau_{xy}$ = \py{tau_xy} MPa};')
              print(r'\draw [-left to, thick] (element.south east) ++ (-135:0.3) --++ (180:1.5);')
              print(r'\draw [-right to, thick] (element.north west) ++ (-135:0.3) --++ (-90:1.5);')
              print(r'\draw [-right to, thick] (element.south east) ++ (45:0.3) --++ (90:1.5);')
            else:
              print(r'\draw [right to-, thick] (element.north west) ++ (45:0.3) --++ (0:1.5) node[above right]{$\tau_{xy}$ = \py{tau_xy} MPa};')
              print(r'\draw [right to-, thick] (element.south east) ++ (-135:0.3) --++ (180:1.5);')
              print(r'\draw [left to-, thick] (element.north west) ++ (-135:0.3) --++ (-90:1.5);')
              print(r'\draw [left to-, thick] (element.south east) ++ (45:0.3) --++ (90:1.5);')
=>PYTHONTEX#py#default#default#61#i####py_default_default_60.stdout#1#
sigma_y
=>PYTHONTEX#py#default#default#62#i####py_default_default_60.stdout#3#
sigma_x
=>PYTHONTEX#py#default#default#63#i####py_default_default_60.stdout#5#
tau_xy
=>PYTHONTEX#py#default#default#64#code#####4857#
          t = random.randint(2,7)*1e-3 # in mm
          W = random.randint(5,15)/10
          L = random.randint(2,5)
          poisson = random.randint(20,45)/100
          alpha = random.randint(5,15)*1e-6
          T_0 = random.randint(10,45)*10
          T_1 = random.randint(10,45)*10
          T_1 = T_0 + 120 if T_1 == T_0 else T_1
          F = random.randint(20,40)*10000
          E = random.randint(5,25)*10*1e9 # 50 - 250 GPa
=>PYTHONTEX#py#default#default#65#i#####4869#
poisson
=>PYTHONTEX#py#default#default#66#i#####4869#
round(alpha/1e-6)
=>PYTHONTEX#py#default#default#67#i#####4869#
round(E/1e9)
=>PYTHONTEX#py#default#default#68#i#####4869#
round(t/1e-3)
=>PYTHONTEX#py#default#default#69#i#####4869#
W
=>PYTHONTEX#py#default#default#70#i#####4869#
L
=>PYTHONTEX#py#default#default#71#i#####4869#
F
=>PYTHONTEX#py#default#default#72#i#####4869#
T_0
=>PYTHONTEX#py#default#default#73#i#####4869#
T_1
=>PYTHONTEX#py#default#default#74#i#####4879#
F
=>PYTHONTEX#py#default#default#75#i#####4880#
L
=>PYTHONTEX#py#default#default#76#i#####4881#
W
=>PYTHONTEX#py#default#default#77#code#####5171#
sigma_allow = random.randint(3,15)*10*1e6 # 30 - 150 MPa
tau_allow = random.randint(2,10)*10*1e6 # 20 - 100 MPa
r = random.randint(15,25)/10*1e-2 # 1.5 - 2.5 cm
t = random.randint(3,10)/10*1e-3 # 0.3 - 1 mm
h = random.randint(4,7)*1e-2 # 4 - 7 cm
p0 = round(random.randint(1,5)*1e3) # 1 - 5 kPa
=>PYTHONTEX#py#default#default#78#i#####5180#
round(sigma_allow/1e6)
=>PYTHONTEX#py#default#default#79#i#####5180#
round(tau_allow/1e6)
=>PYTHONTEX#py#default#default#80#i#####5180#
round(r/1e-2,1)
=>PYTHONTEX#py#default#default#81#i#####5180#
round(h/1e-2)
=>PYTHONTEX#py#default#default#82#i#####5180#
round(t/1e-3,1)
=>PYTHONTEX#py#default#default#83#i#####5184#
p0
=>PYTHONTEX#py#default#default#83#i#####5184#
p0
=>PYTHONTEX#py#default#default#84#code#####5187#
F = random.randint(10,30)*100 # 1000 - 3000
L1 = random.randint(15,30)/10 # 1.5 - 3 m
x = L1 - random.randint(5,10)/10 # 0.5 - 1 m
frac = x/L1
d = round(random.randint(2,4)/5*L1,3)
frac_d = d/L1
L2 = random.randint(5,10)/10 # 0.5 - 1 m
b = random.randint(3,8)*1e-2 # 3 - 8 cm
h = random.randint(2,7)*1e-2 # 2 - 7 cm
frac_bh = b/h
=>PYTHONTEX#py#default#default#85#code#####5212#
            print(r'\draw [<-, ultra thick] (support.north) ++ (0:'+str(frac*4)+r') ++ (90:0.2) --++ (90:1) node[above]{\py{F} N};')
            print(r'\draw [|<->|] (support.north) ++ (90:0.5) --++ (0:'+str(frac*4)+r') node[midway, fill=White]{\py{round(x,1)} m};')
            print(r'\node at (support.north) [draw, fill=Black, circle, inner sep=0, minimum height=1mm,yshift=-2mm,xshift='+str(4*frac_d)+r'cm](C){};')
            print(r'\draw [|<->|] (support.north) ++ (-90:0.5) --++ (0:'+str(frac_d*4)+r') node[midway, fill=White]{'+str(d)+r' m};')
=>PYTHONTEX#py#default#default#86#i####py_default_default_85.stdout#1#
F
=>PYTHONTEX#py#default#default#87#i####py_default_default_85.stdout#2#
round(x,1)
=>PYTHONTEX#py#default#default#88#code#####5223#
              print(r'\node at (wall.west) [draw, xshift=-2cm, minimum height='+str(1.5/frac_bh)+r'cm, minimum width=1.5cm, fill=LightSkyBlue](section){};')
              print(r'\draw [|<->|] (section.south west) ++ (180:0.3) --++ (90:'+str(1.5/frac_bh)+r') node[midway, left, fill=White]{'+str(round(h/1e-2))+r' cm};')
=>PYTHONTEX#py#default#default#89#i#####5227#
round(b/1e-2)
=>PYTHONTEX#py#default#default#90#i#####5230#
L1
=>PYTHONTEX#py#default#default#91#i#####5232#
L2
=>PYTHONTEX#py#default#default#92#code#####6629#
hp = random.randint(4,11)*5 # 20 - 55 hp
rpm = random.randint(3,8)*5*100 # 1500 - 4000 rpm
S_y = random.randint(2,8)*10*1e6 # 20 - 80 MPa
=>PYTHONTEX#py#default#default#93#i#####6635#
round(S_y/1e6)
=>PYTHONTEX#py#default#default#94#i#####6635#
hp
=>PYTHONTEX#py#default#default#95#i#####6635#
rpm
=>PYTHONTEX#py#default#default#96#code#####6641#
S_y = random.randint(2,5)*10*1e6 # 20-50 MPa
S_ut = S_y*1.5
E = random.randint(10,20)*10*1e9 # 100 - 200 GPa
dim = random.choice(['length','thickness'])
dim_num = round(random.randint(15,30)/10,1) if dim == 'length' else round(random.randint(5,15)*1e-3,3)
dim_design = 'minimum thickness' if dim == 'length' else 'maximum length'
w = random.randint(5,8)/10 # 0.5 - 0.8 m
F = random.randint(12,20)*100 # 1200 - 2000 N
L = dim_num if dim == 'length' else '??'
h = dim_num if dim == 'thickness' else '??'
=>PYTHONTEX#py#default#default#97#i#####6654#
round(E/1e9)
=>PYTHONTEX#py#default#default#98#i#####6654#
round(S_ut/1e6)
=>PYTHONTEX#py#default#default#99#i#####6654#
round(S_y/1e6)
=>PYTHONTEX#py#default#default#100#i#####6654#
dim
=>PYTHONTEX#py#default#default#101#i#####6654#
dim_num
=>PYTHONTEX#py#default#default#102#i#####6654#
w
=>PYTHONTEX#py#default#default#103#i#####6654#
F
=>PYTHONTEX#py#default#default#104#i#####6654#
dim_design
=>PYTHONTEX#py#default#default#105#i#####6662#
F
=>PYTHONTEX#py#default#default#106#i#####6663#
L
=>PYTHONTEX#py#default#default#107#i#####6664#
h
=>PYTHONTEX#py#default#default#108#code#####6668#
L1 = random.randint(5,15)/10 # 0.5 - 1.5 m
theta = random.choice([30,35,40,45,50,55,60])
r = round(random.randint(2,7)*1e-3,3) # 2 - 7 mm
E = random.randint(12,22)*10*1e9 # 120 - 220 GPa
S_y = random.randint(5,20)*10*1e6 # 50 - 200 MPa
=>PYTHONTEX#py#default#default#109#i#####6676#
r
=>PYTHONTEX#py#default#default#110#i#####6676#
round(E/1e9)
=>PYTHONTEX#py#default#default#111#i#####6676#
round(S_y/1e6)
=>PYTHONTEX#py#default#default#112#code#####6681#
        print(r'\node[minimum height='+str(1+4*tan(radians(theta)))+r'cm, minimum width=6mm, pattern=north west lines](wall){};')
=>PYTHONTEX#py#default#default#113#code#####6687#
        print(r'\node at (brod.east) [anchor=east, fill=LightGrey, draw, minimum height=2mm, minimum width='+str(4/cos(radians(theta)))+r'cm, rounded corners=1mm,rotate='+str(-theta)+r'](trod){};')
        print(r'\node at (trod.east) [circle, draw, fill=Black, minimum height=1mm, inner sep=0, rotate='+str(-theta)+r', xshift=-1mm]{};')
        print(r'\node at (trod.west) [circle, draw, fill=Black, minimum height=1mm, inner sep=0, rotate='+str(-theta)+r', xshift=1mm]{};')
        print(r'\draw [|<->|] (brod.west) ++ (-90:0.5) --++ (0:4) node[midway, fill=White]{'+str(L1)+r' m};')
        print(r'\draw [|<->|] (brod.east) ++ (180:2) arc (180:'+str(180-theta)+r':2) node[midway,fill=White]{'+str(theta)+'$^{\circ}$};')
=>PYTHONTEX:SETTINGS#
version=0.18
outputdir=pythontex-files-me210
workingdir=.
workingdirset=false
gobble=auto
rerun=default
hashdependencies=default
makestderr=false
stderrfilename=full
keeptemps=none
pyfuture=default
pyconfuture=none
pygments=true
pygglobal=:GLOBAL||
fvextfile=-1
pyconbanner=none
pyconfilename=stdin
depythontex=false
pygfamily=py|python3|
pygfamily=pycon|pycon|
pygfamily=sympy|python3|
pygfamily=sympycon|pycon|
pygfamily=pylab|python3|
pygfamily=pylabcon|pycon|
